//Source code generated by AppGPT (www.appgpt.tech)
import { Admin, Resource, CustomRoutes } from 'react-admin';
import { customDataProvider } from './dataProvider';
import fakeDataProvider from 'ra-data-fakerest';
import { Dashboard } from './dashboard';
import { authProvider, apInitialize } from './authProvider';
import { i18nProvider } from './i18nProvider';
import LoginPage, { Login } from './Login';
import data from './data';
import {
  ProgramsList,
  ProgramsCreate,
  ProgramsEdit,
} from './resources/Programs';
import {
  AnnouncementsList,
  AnnouncementsCreate,
  AnnouncementsEdit,
} from './resources/Announcements';
import {
  PrayerTimesList,
  PrayerTimesCreate,
  PrayerTimesEdit,
} from './resources/PrayerTimes';
import {
  CommunityMembersList,
  CommunityMembersCreate,
  CommunityMembersEdit,
} from './resources/CommunityMembers';
import {
  PhotoAndVideoList,
  PhotoAndVideoCreate,
  PhotoAndVideoEdit,
} from './resources/PhotoAndVideo';
import ProgramsIcon from '@mui/icons-material/Event';
import AnnouncementsIcon from '@mui/icons-material/Announcement';
import PrayerTimesIcon from '@mui/icons-material/AccessTime';
import CommunityMembersIcon from '@mui/icons-material/People';
import PhotoAndVideoIcon from '@mui/icons-material/Photo';
// SUPERTOKENS
import React from 'react';
import SuperTokens, {
  SuperTokensWrapper,
  getSuperTokensRoutesForReactRouterDom,
} from 'supertokens-auth-react';
import ThirdPartyPasswordless from 'supertokens-auth-react/recipe/thirdpartypasswordless';
import Session from 'supertokens-auth-react/recipe/session';
import { BrowserRouter, Routes, Route, Link } from 'react-router-dom';
import * as reactRouterDom from 'react-router-dom';
let sessionFn = Session.init();
SuperTokens.init({
  appInfo: {
    appName: import.meta.env.VITE_SUPERTOKENS_APPNAME,
    apiDomain: import.meta.env.VITE_BACKEND_DOMAIN,
    websiteDomain: import.meta.env.VITE_SUPERTOKENS_WEBSITEDOMAIN,
    apiBasePath: import.meta.env.VITE_BACKEND_APIPATH + '/auth',
    websiteBasePath: import.meta.env.VITE_SUPERTOKENS_WEBSITEBASEPATH,
  },
  recipeList: [
    ThirdPartyPasswordless.init({
      contactMethod: 'EMAIL',
      signInUpFeature: {
        providers: [
          ThirdPartyPasswordless.Github.init(),
          //ThirdPartyPasswordless.Google.init(),
          //ThirdPartyPasswordless.Facebook.init(),
          //ThirdPartyPasswordless.Apple.init(),
        ],
      },
    }),
    sessionFn,
  ],
});
apInitialize(Session);
// END SUPERTOKENS
let dataProvider: any;
if (import.meta.env.VITE_USE_BACKEND_DATA === 'true') {
  dataProvider = customDataProvider(
    import.meta.env.VITE_BACKEND_DOMAIN +
      import.meta.env.VITE_BACKEND_APIPATH +
      '/proxy',
  );
} else {
  dataProvider = fakeDataProvider(data.defaultData);
}

const App = () => (
  <SuperTokensWrapper>
    <BrowserRouter basename="/a7ecbd963">
      <Admin
        authProvider={
          import.meta.env.VITE_ENVIRONMENT != 'DEV' ? authProvider : undefined
        }
        requireAuth
        loginPage={LoginPage}
        dataProvider={dataProvider}
        i18nProvider={i18nProvider}
        dashboard={Dashboard}
      >
        <Resource
          name="Programs"
          options={{ label: 'Programs' }}
          list={ProgramsList}
          create={ProgramsCreate}
          edit={ProgramsEdit}
          recordRepresentation="Name"
          icon={ProgramsIcon}
        />
        <Resource
          name="Announcements"
          options={{ label: 'Announcements' }}
          list={AnnouncementsList}
          create={AnnouncementsCreate}
          edit={AnnouncementsEdit}
          recordRepresentation="Title"
          icon={AnnouncementsIcon}
        />
        <Resource
          name="PrayerTimes"
          options={{ label: 'Prayer Times' }}
          list={PrayerTimesList}
          create={PrayerTimesCreate}
          edit={PrayerTimesEdit}
          recordRepresentation="PrayerTimeStart"
          icon={PrayerTimesIcon}
        />
        <Resource
          name="CommunityMembers"
          options={{ label: 'Community Members' }}
          list={CommunityMembersList}
          create={CommunityMembersCreate}
          edit={CommunityMembersEdit}
          recordRepresentation="Name"
          icon={CommunityMembersIcon}
        />
        <Resource
          name="PhotoAndVideo"
          options={{ label: 'Photo And Video' }}
          list={PhotoAndVideoList}
          create={PhotoAndVideoCreate}
          edit={PhotoAndVideoEdit}
          recordRepresentation="Media"
          icon={PhotoAndVideoIcon}
        />
        <CustomRoutes noLayout>
          {/*This renders the login UI on the /auth route*/}
          {getSuperTokensRoutesForReactRouterDom(reactRouterDom)}
          {/*Your app routes*/}
        </CustomRoutes>
      </Admin>
    </BrowserRouter>
  </SuperTokensWrapper>
);

export default App;
